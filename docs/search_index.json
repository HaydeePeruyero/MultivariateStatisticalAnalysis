[["regresión-múltiple.html", "Sección 2 Regresión múltiple 2.1 ¿Por qué estadística multivariada? 2.2 Regresión múltiple 2.3 Estimación de parámetros 2.4 Pruebas de Hipótesis 2.5 Intervalos de confianza 2.6 Ejercicios Regresión Lineal Multiple 2.7 Validación de Supuestos 2.8 Análisis de Varianza 2.9 Selección del modelo", " Sección 2 Regresión múltiple 2.1 ¿Por qué estadística multivariada? El proceso de modelado consiste en construir expresiones matemáticas que permitan representar el comportamiento de una variable que queremos estudiar. Cuando contamos con varias variables, suele interesarnos analizar cómo unas influyen sobre otras, determinando si existe una relación, su intensidad y su forma. En muchos casos, estas relaciones pueden ser complejas y difíciles de describir directamente; por ello, se busca aproximarlas mediante funciones matemáticas sencillas como polinomios, que conserven los elementos esenciales para explicar el fenómeno de interés. Cuando estudiamos fenómenos deterministas, es común vincular una variable dependiente con una o más variables independientes. Por ejemplo, en la ecuación de la velocidad (\\(v=d/t\\)), la distancia depende de la velocidad y del tiempo. En la práctica, cuando realizamos distintos experimentos, las fórmulas deterministas podrían no capturar por completo el comportamiento observado. Esto puede deberse a factores no controlados, a la presencia de variabilidad natural o a efectos aleatorios. Por esta razón, además de la parte determinista del modelo, se incorpora un término que represente la discrepancia aleatoria entre lo que se predice y lo que efectivamente se observa. De forma general, esta idea se resume como: \\[Observación = Modelo \\ + \\ Error\\] Cuando se supone que la relación entre las variables puede representarse mediante una ecuación lineal, hablamos de análisis de regresión lineal. Si intervienen únicamente dos variables, una dependiente \\(y\\) y independiente \\(x\\), se trata de regresión lineal simple. En cambio, cuando la variable de interés \\(y\\) depende de dos o más variables independientes \\(x_1,x_2, ...\\) hablamos de regresión lineal múltiple. Supongamos que queremos predecir el rendimiento académico de un estudiante, ¿solo necesitamos las horas que estudia? En este caso se tiene que el puntaje o rendimiento lo podemos representar con \\(y\\) y las horas de estudio con \\(x\\). Entonces esta propuesta de modelo, la podríamos representar como: \\[y=\\beta_0+\\beta_1x\\] Donde \\(\\beta_0\\) es la ordenada al origen y \\(\\beta_1\\) la pendiente. Esta recta podría no ajustarse al modelo por diferentes razones, entonces lo que se hace es considerar un error aleatorio \\(\\epsilon\\). El modelo que ya considera este error se representa como: \\[y=\\beta_0+\\beta_1x+\\epsilon.\\] A este modelo se le conoce como modelo de regresión lineal simple y a \\(\\beta_0,\\beta_1\\) se les conoce como coeficientes de regresión. En problemas reales, casi nunca una sola variable explica el fenómeno. Las decisiones y predicciones mejoran cuando integramos múltiples fuentes de información. Ejemplos: - Salud: riesgo de una enfermedad según edad, IMC, actividad física, dieta y antecedentes. - Ingeniería: vida útil de una pieza según temperatura, vibración, material y carga. - Biología: crecimiento de una planta por agua, luz, fertilizante, temperatura. Ejemplo: Si queremos predecir el rendimiento académico de un estudiante, ¿solo necesitamos las horas que estudia? ¿qué otras variables podrían influir en el puntaje de un examen? Rendimiento escolar set.seed(123) n &lt;- 10 data_intro &lt;- tibble( estudiante = paste0(&quot;E&quot;, 1:n), horas_estudio = c(2,3,4,5,1,3,2,4,5,6), horas_sueno = c(7,8,6,7,5,8,7,6,9,7), asistencia = c(0.9,0.95,0.8,0.85,0.7,0.9,0.8,0.9,1,0.95), puntaje = c(65,70,68,80,60,75,65,78,88,85) ) data_intro ## # A tibble: 10 × 5 ## estudiante horas_estudio horas_sueno asistencia puntaje ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 E1 2 7 0.9 65 ## 2 E2 3 8 0.95 70 ## 3 E3 4 6 0.8 68 ## 4 E4 5 7 0.85 80 ## 5 E5 1 5 0.7 60 ## 6 E6 3 8 0.9 75 ## 7 E7 2 7 0.8 65 ## 8 E8 4 6 0.9 78 ## 9 E9 5 9 1 88 ## 10 E10 6 7 0.95 85 ¿Qué pasa si solo graficamos horas de estudio vs puntaje? Plot hotas de estudio vs puntaje sugerida library(ggplot2) ggplot(data_intro, aes(horas_estudio, puntaje)) + geom_point(size=3) + geom_smooth(method=&quot;lm&quot;, se=FALSE) + labs(title=&quot;¿Solo horas de estudio explican el puntaje?&quot;) ## `geom_smooth()` using formula = &#39;y ~ x&#39; ¿Se ajusta un modelo lineal? ¿Porqué? 2.1.1 ¿Qué es “multivariado” y por qué lo necesitamos? Idea central: cuando varias \\(x\\) influyen sobre \\(y\\), estudiar cada \\(x\\) por separado puede engañarnos. El análisis multivariado permite: Aislar efectos: estimar el efecto de \\(x_1\\) manteniendo constantes \\(x_2,x_3,...\\). Mejorar predicción: reducir error al añadir información relevante. Controlar confusores: variables que cambian la relación aparente entre \\(y\\) y \\(x\\). Ejemplo: Si ajustamos ahora un modelo con varias variables, ¿vamos a observar un cambio? ¿se ajustará mejor? Código (modelos + comparaciones) # Modelo simple m1 &lt;- lm(puntaje ~ horas_estudio, data = data_intro) # Modelo múltiple m2 &lt;- lm(puntaje ~ horas_estudio + horas_sueno + asistencia, data = data_intro) # Medidas clave R2_m1 &lt;- glance(m1)$r.squared R2_m2 &lt;- glance(m2)$r.squared print(paste(&quot;El R2 del modelo simple:&quot;, R2_m1)) ## [1] &quot;El R2 del modelo simple: 0.824317362184441&quot; print(paste(&quot;El R2 del modelo multiple:&quot;, R2_m2)) ## [1] &quot;El R2 del modelo multiple: 0.895428180549875&quot; #R2adj_m1 &lt;- glance(m1)$adj.r.squared #R2adj _m2 &lt;- glance(m2)$adj.r.squared ¿Aumentó \\(R^2\\) al incluir más variables? ¿Por qué tiende a subir? ¿Qué cambia en la interpretación de horas_estudio al controlar por horas_sueno y asistencia? ¿Puede un predictor ser importante en bivariado y no en multivariado (o viceversa)? 2.2 Regresión múltiple 2.2.1 Modelo y estimación Los modelos en regresión lineal múltiple están dados por la siguiente forma, donde \\(y\\) depende de \\(p\\) variables predictoras: \\[y_i=\\beta_0+\\beta_1x_{i1}+\\beta_2x_{i2} + \\beta_px_{ip}+\\epsilon_i.\\] Se suele asumir que los errores \\(\\epsilon_i\\) son i.i.d. con distribución normal de media 0 y varianza \\(\\sigma^2\\) desconocida. Los coeficientes \\(\\beta_i\\) son constantes desconocidas y son los parámetros del modelo. Cada \\(\\beta_j\\) representa el cambio esperado en la respuesta \\(y\\) por el cambio unitario en \\(x_i\\) cuando todas las demás variables independientes \\(x_i(i\\neq j)\\) se mantienen constantes. # Forma general ajuste &lt;- lm(y ~ x1 + x2 + ... + xp, data = datos) # summary(ajuste) Los coeficientes los podemos interpretar como sigue: Intercepto (\\(\\beta_0\\)): valor esperado de \\(y\\) cuando todas las \\(x\\)=0. Pendiente \\(\\beta_j\\): efecto parcial de \\(x_j\\) sobre \\(y\\) manteniendo las demás constantes. En los modelos de regreción lineal, solemos usar las siguientes medidas de bondad de ajuste: \\(R^2\\): proporción de varianza de \\(y\\) explicada. \\(R^2\\) ajustado: penaliza por número de predictores (mejor para comparar modelos con distinto número de x). RMSE (\\(\\sigma\\)): error típico de predicción en unidades de \\(y\\). comp &lt;- dplyr::bind_rows( glance(m1) %&gt;% mutate(modelo=&quot;simple&quot;), glance(m2) %&gt;% mutate(modelo=&quot;multiple&quot;) ) %&gt;% select(modelo, r.squared, adj.r.squared) comp ## # A tibble: 2 × 3 ## modelo r.squared adj.r.squared ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 simple 0.824 0.802 ## 2 multiple 0.895 0.843 Para este modelo algunos de los supuestos se siguen del modelo de regresión lineal simple y se agregan algunos que tienen que ver con la relación que pudiera existir entre las variables regresoras. El modelo es lineal en los parámetros. Chequeo: residuales vs ajustados sin patrón claro. El modelo está especificado correctamente. Covarianza cero entre variables regresoras y el error. Esperanza del error igual a cero. Homocedasticidad. No autocorrelación entre los errores. Los errores siguen una distribución normal. Mas observaciones que parámetros a estimar. Variación entre los valores de las variables regresoras. No colinealidad (multicolinealidad) entre las variables regresoras, es decir, no existe una relación lineal entre \\(x_i\\) y \\(x_j\\) (es decir, las variables son linealmente independientes). Supuestos # Modelo m2 par(mfrow=c(1,2)) plot(m2, which=1) # Residuales vs ajustados plot(m2, which=2) # QQ-plot Ejercicio: Supongamos que tenemos los siguientes datos: precio de vivienda según metros, habitaciones y distancia al centro. Dataset set.seed(42) n &lt;- 14 casas &lt;- tibble::tibble( precio = c(200,220,250,275,300,180,210,260,280,320,190,240,230,305), metros = c(80,90,100,110,120,70,85,105,115,130,75,95,92,125), habitaciones = c(2,3,3,4,4,2,3,3,4,5,2,3,3,4), distancia_centro = c(5,4,6,3,2,8,6,3,2,1,7,5,4,2) ) casas ## # A tibble: 14 × 4 ## precio metros habitaciones distancia_centro ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 200 80 2 5 ## 2 220 90 3 4 ## 3 250 100 3 6 ## 4 275 110 4 3 ## 5 300 120 4 2 ## 6 180 70 2 8 ## 7 210 85 3 6 ## 8 260 105 3 3 ## 9 280 115 4 2 ## 10 320 130 5 1 ## 11 190 75 2 7 ## 12 240 95 3 5 ## 13 230 92 3 4 ## 14 305 125 4 2 Ajusta precio ~ metros (simple) y precio ~ metros + habitaciones + distancia_centro (múltiple). Compara \\(R^2\\), \\(R^2\\) ajustado y σ (RMSE). Interpreta el coeficiente de distancia_centro. Revisa QQ-plot y residuales vs ajustados. ¿Algún patrón? Solución m_s &lt;- lm(precio ~ metros, data=casas) m_m &lt;- lm(precio ~ metros + habitaciones + distancia_centro, data=casas) broom::glance(m_s)[,c(&quot;r.squared&quot;,&quot;adj.r.squared&quot;)] ## # A tibble: 1 × 2 ## r.squared adj.r.squared ## &lt;dbl&gt; &lt;dbl&gt; ## 1 0.996 0.996 broom::glance(m_m)[,c(&quot;r.squared&quot;,&quot;adj.r.squared&quot;)] ## # A tibble: 1 × 2 ## r.squared adj.r.squared ## &lt;dbl&gt; &lt;dbl&gt; ## 1 0.997 0.996 broom::tidy(m_m) ## # A tibble: 4 × 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) -8.67 14.9 -0.583 0.573 ## 2 metros 2.53 0.162 15.6 0.0000000236 ## 3 habitaciones -0.505 2.80 -0.180 0.861 ## 4 distancia_centro 1.38 0.974 1.42 0.187 par(mfrow=c(1,2)) plot(m_m, which=1) plot(m_m, which=2) 2.3 Estimación de parámetros Ejemplo (Montgomery, 2002): : Un embotellador de bebidas gaseosas analiza las rutas de servicio de las máquinas expendedoras en su sistema de distribución. Le interesa predecir el tiempo necesario para que el representante de ruta atienda las máquinas expendedoras en una tienda. Esta actividad de servicio consiste en abastecer la máquina con productos embotellados, y algo de mantenimiento o limpieza. El ingeniero industrial responsable del estudio ha sugerido que las dos variables más importantes que afectan el tiempo de entrega \\(y\\) son la cantidad de cajas de producto abastecido, \\(x_1\\), y la distancia caminada por el representante, \\(x_2\\). El ingeniero ha reunido 25 observaciones de tiempo de entrega que se ven en la tabla siguiente. Se ajustará el modelo de regresión lineal multiple siguiente: \\[ y = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + \\varepsilon \\] Archivo: refrescos.csv. Base de datos # datos &lt;- data.frame( Observacion = 1:25, y = c(16.68, 11.50, 12.03, 14.88, 13.75, 18.11, 8.00, 17.83, 79.24, 21.50, 40.33, 21.00, 13.50, 19.75, 24.00, 29.00, 15.35, 19.00, 9.50, 35.10, 17.90, 52.32, 18.75, 19.83, 10.75), x1 = c(7, 3, 3, 4, 6, 7, 2, 7, 30, 5, 16, 10, 4, 6, 9, 10, 6, 7, 3, 17, 10, 26, 9, 8, 4), x2 = c(560, 220, 340, 80, 150, 330, 110, 210, 1460, 605, 688, 215, 255, 462, 448, 776, 200, 132, 36, 770, 140, 810, 450, 635, 150) ) datos ## Observacion y x1 x2 ## 1 1 16.68 7 560 ## 2 2 11.50 3 220 ## 3 3 12.03 3 340 ## 4 4 14.88 4 80 ## 5 5 13.75 6 150 ## 6 6 18.11 7 330 ## 7 7 8.00 2 110 ## 8 8 17.83 7 210 ## 9 9 79.24 30 1460 ## 10 10 21.50 5 605 ## 11 11 40.33 16 688 ## 12 12 21.00 10 215 ## 13 13 13.50 4 255 ## 14 14 19.75 6 462 ## 15 15 24.00 9 448 ## 16 16 29.00 10 776 ## 17 17 15.35 6 200 ## 18 18 19.00 7 132 ## 19 19 9.50 3 36 ## 20 20 35.10 17 770 ## 21 21 17.90 10 140 ## 22 22 52.32 26 810 ## 23 23 18.75 9 450 ## 24 24 19.83 8 635 ## 25 25 10.75 4 150 Veamos un gráfico de dispersión de los datos. ¿Qué observamos? pairs(datos[-1]) Estimar \\(\\beta\\) Primero, vamos a crear la matriz \\(X\\) y el vector \\(y\\). Matrices # Columna de 1 para el intercepto idv &lt;- rep(1, nrow(datos)) # Creamos matriz X X &lt;- matrix(c(idv,datos$x1,datos$x2),nrow=25,ncol=3) # Creamos el vector y y &lt;- matrix(datos$y, nrow = 25, ncol = 1) Ya sabemos que nuestro estimador está dado por \\[ \\hat{\\beta} = (X&#39;X)^{-1}X&#39;y \\] Entonces podemos encontrar el estimador. Estimador beta beta &lt;- solve(t(X) %*% X) %*% t(X) %*% y beta ## [,1] ## [1,] 2.34123115 ## [2,] 1.61590721 ## [3,] 0.01438483 Entonces el ajuste por el método de mínimos cuadrados, con los coeficientes de regresión que encontramos está dado por: \\(\\hat{y} =\\) 2.3412311 \\(+\\) 1.6159072 \\(x_1\\) \\(+\\) 1.6159072 \\(x_2\\) Esto lo podemos hacer más rápido usando la función de lm. Construimos el modelo. Modelo en R M1 &lt;- lm(y ~ x1 + x2, datos) M1 ## ## Call: ## lm(formula = y ~ x1 + x2, data = datos) ## ## Coefficients: ## (Intercept) x1 x2 ## 2.34123 1.61591 0.01438 ¿Cómo accedemos a los valores del modelo? Coeficientes beta_0 &lt;- M1$coefficients[1] beta_1 &lt;- M1$coefficients[2] beta_2 &lt;- M1$coefficients[3] Los valores son \\(\\beta_0=\\) 2.3412311, \\(\\beta_1=\\) 1.6159072 y \\(\\beta_2=\\) 0.0143848. Estimación de la varianza del error \\(\\sigma^2\\) Ya tenemos que la suma de los cuadrados de los errores está dada por \\[ SSE = y&#39;y - \\hat{\\beta}X&#39;y\\] Sustituimos los valores que tenemos y obtemos el SSE. SSE SSE &lt;- t(y)%*% y - t(beta) %*% t(X) %*% y SSE ## [,1] ## [1,] 233.7317 Y de está forma, podemos encontrar el estimador de \\(\\sigma^2\\). Estimador varest &lt;- SSE / (nrow(y) - nrow(beta)) varest ## [,1] ## [1,] 10.62417 Directo con las funciones de R, podemos acceder a los parámetros que se guardaron en el modelo que ya calculamos. Resumen del modelo summary(M1) ## ## Call: ## lm(formula = y ~ x1 + x2, data = datos) ## ## Residuals: ## Min 1Q Median 3Q Max ## -5.7880 -0.6629 0.4364 1.1566 7.4197 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.341231 1.096730 2.135 0.044170 * ## x1 1.615907 0.170735 9.464 3.25e-09 *** ## x2 0.014385 0.003613 3.981 0.000631 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 3.259 on 22 degrees of freedom ## Multiple R-squared: 0.9596, Adjusted R-squared: 0.9559 ## F-statistic: 261.2 on 2 and 22 DF, p-value: 4.687e-16 Algunos de los parámetros almacenados en el modelo nos permiten obtener también el resultado previo. Estimador sum(residuals(M1)^2) / df.residual(M1) ## [1] 10.62417 2.3.1 Ejercicios Ejercicio 1: Un analista hace un estudio químico y espera que el rendimiento de cierta sustancia se vea afectado por dos factores. Se realizan 17 experimentos cuyos datos se registran en el cuadro siguiente. Por experimentos similares, se sabe que los factores \\(x_1\\) y \\(x_2\\) no están relacionados; por ello, el analista decide utilizar un modelo de regresión lineal múltiple. Calcule el modelo de regresión y grafíquelo sobre las observaciones. Archivo: est_quimico.csv Datos Ejercicio 1 datos2 &lt;- data.frame( Experimento = 1:17, x1 = c(41.9, 43.4, 43.9, 44.5, 47.3, 47.5, 47.9, 50.2, 52.8, 53.2, 56.7, 57.0, 63.5, 64.3, 71.1, 77.0, 77.8), x2 = c(29.1, 29.3, 29.5, 29.7, 29.9, 30.3, 30.5, 30.7, 30.8, 30.9, 31.5, 31.7, 31.9, 32.0, 32.1, 32.5, 32.9), y = c(251.3, 251.3, 248.3, 267.5, 273.0, 276.5, 270.3, 274.9, 285.0, 290.0, 297.0, 302.5, 304.5, 309.3, 321.7, 330.7, 349.0) ) datos2 ## Experimento x1 x2 y ## 1 1 41.9 29.1 251.3 ## 2 2 43.4 29.3 251.3 ## 3 3 43.9 29.5 248.3 ## 4 4 44.5 29.7 267.5 ## 5 5 47.3 29.9 273.0 ## 6 6 47.5 30.3 276.5 ## 7 7 47.9 30.5 270.3 ## 8 8 50.2 30.7 274.9 ## 9 9 52.8 30.8 285.0 ## 10 10 53.2 30.9 290.0 ## 11 11 56.7 31.5 297.0 ## 12 12 57.0 31.7 302.5 ## 13 13 63.5 31.9 304.5 ## 14 14 64.3 32.0 309.3 ## 15 15 71.1 32.1 321.7 ## 16 16 77.0 32.5 330.7 ## 17 17 77.8 32.9 349.0 Ejercicio 2: Repetir el ejemplo con los datos datasets::trees de R que proporciona mediciones del diámetro, altura y volumen de madera en 31 cerezos negros talados. Ejercicio 3: Subir a Github los dos ejercicios previos tanto con solución en R como en Python. Comparar las funciones. Ventajas y desventajas de ambas. 2.4 Pruebas de Hipótesis Cuando revisamos el summary del modelo, nos arroja si son significativas o no y a que nivel de significancia las variables que estamos considerando. Veamos el siguiente ejemplo. 2.4.1 Prueba de la significancia de la regresión Ejemplo: Con los datos del embotellador de bebidas gaseosas, se probará la significancia de la regresión. Sumas de Cuadrados SCT &lt;- t(y) %*% y - sum(y)**2 / nrow(datos) SCT ## [,1] ## [1,] 5784.543 SCE &lt;- t(beta) %*% t(X) %*% y - sum(y)**2 / nrow(datos) SCE ## [,1] ## [1,] 5550.811 SSE &lt;- SCT - SCE SSE ## [,1] ## [1,] 233.7317 Para probar \\[H_0 : \\beta_1 = \\beta_2=0\\] se calcula el estadístico: Estadístico F F0 &lt;- (SCE / (ncol(X) - 1)) / (SSE / (nrow(X) - (ncol(X) -1) - 1)) F0 ## [,1] ## [1,] 261.2351 Como el valor de \\(F_0\\) es mayor que el valor tabulado de \\(F_{\\alpha;p,n-p-1}=F_{0.05;2;22}=3.44\\), se rechaza \\(H_0\\). Lo cual implica qye el tiempo de entrega depende del volumen de entrega y/o de la distancia. Ahora, usando los modelos que ya calculamos. Sumas de cuadrados SCT.m&lt;-sum((datos$y-mean(datos$y))^2) SCT.m ## [1] 5784.543 SCE.m &lt;-sum((M1$fitted-mean(datos$y))^2) SCE.m ## [1] 5550.811 SSE.m &lt;-sum(M1$residuals^2) SSE.m ## [1] 233.7317 Grados de libertad n&lt;-nrow(y) n ## [1] 25 GLT&lt;- n-1 GLT ## [1] 24 GLRes&lt;- df.residual(M1) GLRes ## [1] 22 GLR&lt;- GLT-GLRes GLR ## [1] 2 Cuadrados medios CMR &lt;- SCE /GLR CMR ## [,1] ## [1,] 2775.405 CMRes &lt;- SSE / GLRes CMRes ## [,1] ## [1,] 10.62417 Estadístico F_0 F0 &lt;- CMR/CMRes F0 ## [,1] ## [1,] 261.2351 p-valor pv &lt;- 1 - pf(F0, GLR,GLRes) pv ## [,1] ## [1,] 4.440892e-16 Valor tabulado de F alpha &lt;- 0.05; df1 &lt;- 2; df2 &lt;- 22 F_crit &lt;- qf(1 - alpha, df1, df2) F_crit ## [1] 3.443357 2.4.2 Pruebas sobre coeficientes individuales de regresión Ejemplo: Usando los datos del embotellador de bebidas gaseosas, se desea evaluar la importancia de la variable regresora distancia (\\(x_2\\)) dado que el regresor cajas (\\(x_1\\)) está en el modelo. Estadístico t_0 C22 &lt;- solve(t(X) %*% X)[3,3] C22 ## [1] 1.228745e-06 t0 &lt;- beta_2 / sqrt(varest * C22) t0 ## [,1] ## [1,] 3.981313 ## t tabulado con confianza 95% y 22 grados de libertad tt &lt;- qt(p = 0.95 + 0.05/2, df = 22, lower.tail = TRUE) tt ## [1] 2.073873 Usando el modelo que ya tenemos calculado M1 podemos obtener estos mismos resultados de la siguiente forma. Prueba sobre coeficientes summary(M1) ## ## Call: ## lm(formula = y ~ x1 + x2, data = datos) ## ## Residuals: ## Min 1Q Median 3Q Max ## -5.7880 -0.6629 0.4364 1.1566 7.4197 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.341231 1.096730 2.135 0.044170 * ## x1 1.615907 0.170735 9.464 3.25e-09 *** ## x2 0.014385 0.003613 3.981 0.000631 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 3.259 on 22 degrees of freedom ## Multiple R-squared: 0.9596, Adjusted R-squared: 0.9559 ## F-statistic: 261.2 on 2 and 22 DF, p-value: 4.687e-16 2.5 Intervalos de confianza 2.5.1 Intervalos de confianza en los coeficientes de regresión Ejemplo: Usando los datos del embotellador de bebidas gaseosas, queremos calcular el intervalo de confianza del 95% para \\(\\beta_1\\). Recordemos que el estimador puntual de \\(\\beta_1\\) es 1.6159072. Intervalo de confianza C11 &lt;- solve(t(X) %*% X)[2,2] izq &lt;- beta_1 - tt * sqrt(varest*C11) izq ## [,1] ## [1,] 1.261825 der &lt;- beta_1 + tt * sqrt(varest*C11) der ## [,1] ## [1,] 1.96999 2.5.2 Intervalo de confianza de la respuesta media Ejemplo: El embotellador de bebidas gaseosas quiere establecer un intervalo de confianza del 95% para el tiempo medio de entrega para una tienda donde se requieren \\(x_1=8\\) cajas y la distancia es de \\(x_2=275\\) pies. Nuestro vector \\(X_0\\) está dado por: X0 X0 &lt;- matrix(c(1, 8, 275), nrow = 3) X0 ## [,1] ## [1,] 1 ## [2,] 8 ## [3,] 275 El valor ajustado en ese punto es: Valor ajustado y0 &lt;- t(X0) %*% beta y0 ## [,1] ## [1,] 19.22432 La varianza de \\(\\hat{y_0}\\) Varianza var_y0 &lt;- varest * t(X0) %*% solve(t(X) %*% X) %*% X0 var_y0 ## [,1] ## [1,] 0.5734134 Entonces el intervalo de confianza en este punto es: Intervalo de confianza l_izq &lt;- y0 - tt * sqrt(var_y0) l_izq ## [,1] ## [1,] 17.6539 l_der &lt;- y0 + tt * sqrt(var_y0) l_der ## [,1] ## [1,] 20.79474 Ejemplo: Usaremos el conjunto de datos data(\"marketing\") que contiene 200 observaciones de un experimento publicitario que evalúa el impacto de tres medios de anuncio en las ventas. Para cada observación se registran los presupuestos de publicidad (en miles de dólares) y las ventas obtenidas. Variables: youtube: presupuesto invertido en anuncios de YouTube (miles de USD). facebook: presupuesto invertido en Facebook (miles de USD). newspaper: presupuesto invertido en prensa escrita (miles de USD). sales: ventas registradas (variable respuesta). Cargamos los datos: library(datarium) data(&quot;marketing&quot;) Exploramos rápidamente la base para ver qué variables contiene y la dimensión: str(marketing) ## &#39;data.frame&#39;: 200 obs. of 4 variables: ## $ youtube : num 276.1 53.4 20.6 181.8 217 ... ## $ facebook : num 45.4 47.2 55.1 49.6 13 ... ## $ newspaper: num 83 54.1 83.2 70.2 70.1 ... ## $ sales : num 26.5 12.5 11.2 22.2 15.5 ... #?marketing Ajustamos un modelo lineal que incluya todas las variables, es decir, \\(sales=\\beta_0+\\beta_1 youtube+\\beta_2 facebook+ \\beta_3 newspaper+\\epsilon\\) Modelo marketing modelo1&lt;-lm(sales~youtube+facebook+newspaper,data=marketing) summary(modelo1) ## ## Call: ## lm(formula = sales ~ youtube + facebook + newspaper, data = marketing) ## ## Residuals: ## Min 1Q Median 3Q Max ## -10.5932 -1.0690 0.2902 1.4272 3.3951 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 3.526667 0.374290 9.422 &lt;2e-16 *** ## youtube 0.045765 0.001395 32.809 &lt;2e-16 *** ## facebook 0.188530 0.008611 21.893 &lt;2e-16 *** ## newspaper -0.001037 0.005871 -0.177 0.86 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 2.023 on 196 degrees of freedom ## Multiple R-squared: 0.8972, Adjusted R-squared: 0.8956 ## F-statistic: 570.3 on 3 and 196 DF, p-value: &lt; 2.2e-16 ¿Qué se puede decir sobre la significancia de la variable \\(newspaper\\)? Veamos qué ocurre con el modelo al eliminar la variable \\(newspaper\\) Modelo marketing 2 modelo2&lt;-lm(sales~facebook+youtube,data=marketing) summary(modelo2) ## ## Call: ## lm(formula = sales ~ facebook + youtube, data = marketing) ## ## Residuals: ## Min 1Q Median 3Q Max ## -10.5572 -1.0502 0.2906 1.4049 3.3994 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 3.50532 0.35339 9.919 &lt;2e-16 *** ## facebook 0.18799 0.00804 23.382 &lt;2e-16 *** ## youtube 0.04575 0.00139 32.909 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 2.018 on 197 degrees of freedom ## Multiple R-squared: 0.8972, Adjusted R-squared: 0.8962 ## F-statistic: 859.6 on 2 and 197 DF, p-value: &lt; 2.2e-16 Lo que sigue, es hacer pruebas de hipótesis tanto en las variables como en los coeficientes de regresión. Ejercicio 1: Realizar las pruebas de hipótesis sobre la significancia de la regresión y sobre los coeficientes. Encontrar los intervalos de confianza respectivos del 95%. Para una tienda con presupuestos: \\(youtube = 150\\), \\(facebook = 30\\), \\(newspaper=20\\) (en miles de USD): (a) Calcula el intervalo de confianza del 95% para la media de ventas \\(\\mathbb{E}(sales | X_0)\\). (b) Calcula el intervalo de predicción del 95% para una nueva observación de ventas. (c) Comenta la diferencia entre ambos intervalos. Subir respuesta y explicación de sus resultados a github. 2.6 Ejercicios Regresión Lineal Multiple Realiza los siguientes ejercicios. En cada inciso: explica y comenta la solución, incluye el código utilizado, y añade las gráficas (plots) correspondientes con su interpretación. Asegúrate de que el código sea reproducible y que las figuras tengan títulos, ejes y leyendas. Ejercicio 1: Para los datos de la Liga Nacional de Fútbol. Realizar tanto con las funciones de R y Python como con las fórmulas que usan matrices. Ajustar un modelo de regresión lineal múltiple que relacione la cantidad de juegos ganados con las yardas por aire del equipo (\\(x_2\\)), el porcentaje de jugadas por tierra (\\(x_7\\)) y las yardas por tierra del contrario (\\(x_8\\)). Formar la tabla de análisis de varianza y probar la significancia de la regresión. Calcular el estadístico t para probar las hipótesis \\(H_0 : \\beta_2 = 0\\), \\(H_0 : \\beta_7 = 0\\) y \\(H_0 : \\beta_8 = 0\\). ¿Qué conclusiones se pueden sacar acerca del papel de las variables \\(x_2\\), \\(x_7\\) y \\(x_8\\) en el modelo? Calcular \\(R^2\\) y \\(R^2_{adj}\\) para este modelo. Trazar una gráfica de probabilidad normal de los residuales. ¿Parece haber algún problema con la hipótesis de normalidad? Trazar e interpretar una gráfica de los residuales en función de la respuesta predicha. Trazar las gráficas de los residuales en función de cada una de las variables regresoras. ¿Implican esas gráficas que se especificó en forma correcta el regresor? Calcular un intervalo de confianza de \\(95\\%\\) para \\(\\beta_7\\) y un intervalo de confianza de \\(95\\%\\) para la cantidad media de juegos ganados por un equipo cuando \\(x_2 = 2300\\), \\(x_7 = 56\\) y \\(x_8 = 2100\\). Ajustar un modelo a esos datos, usando solo \\(x_7\\) y \\(x_8\\) como regresores y probar la significancia de la regresión. Calcular \\(R^2\\) y \\(R^2_{adj}\\). Compararlos con los resultados del modelo anterior. Calcular un intervalo de confianza de \\(95\\%\\) para \\(\\beta_7\\). También, un intervalo de confianza de \\(95\\%\\) para la cantidad media de juegos ganados por un equipo cuando \\(x_7 = 56\\) y \\(x_8 = 2100\\). Comparar las longitudes de esos intervalos de confianza con las longitudes de los correspondientes al modelo anterior. ¿Qué conclusiones se pueden sacar de este problema, acerca de las consecuencias de omitir un regresor importante de un modelo? Ejericio 2: Véase los datos de rendimiento de gasolina. Realizar el ejercicio en R. Ajustar un modelo de regresión lineal múltiple que relacione el rendimiento de la gasolina y, en millas por galón, la cilindrada del motor (\\(x_1\\)) y la cantidad de gargantas del carburador (\\(x_6\\)). Formar la tabla de análisis de varianza y probar la significancia de la regresión. Calcular \\(R^2\\) y \\(R^2_{adj}\\) para este modelo. Compararlas con las \\(R^2\\) y \\(R^2_{adj}\\) Ajustado para el modelo de regresión lineal simple, que relaciona las millas con la cilindrada. Determinar un intervalo de confianza para \\(\\beta_1\\). Determinar un intervalo de confianza de \\(95\\%\\) para el rendimiento promedio de la gasolina, cuando \\(x_1 = 225 pulg^3\\) y \\(x_6 = 2\\) gargantas. Determinar un intervalo de predicción de \\(95\\%\\) para una nueva observación de rendimiento de gasolina, cuando \\(x_1 = 225 pulg^3\\) y \\(x_6 = 2\\) gargantas. Considerar el modelo de regresión lineal simple, que relaciona las millas con la cilindrada. Construir un intervalo de confianza de \\(95\\%\\) para el rendimiento promedio de la gasolina y un intervalo de predicción para el rendimiento, cuando \\(x_1 = 225 pulg^3\\). Comparar las longitudes de estos intervalos con los intervalos obtenidos en los dos incisos anteriores. ¿Tiene ventajas agregar \\(x_6\\) al modelo? Trazar una gráfica de probabilidad normal de los residuales. ¿Parece haber algún problema con la hipótesis de normalidad? Trazar e interpretar una gráfica de los residuales en función de la respuesta predicha. Trazar las gráficas de los residuales en función de cada una de las variables regresoras. ¿Implican esas gráficas que se especificó en forma correcta el regresor? Ejercicio 3: Véase los datos sobre precios de viviendas. Realizar el ejercicio en Python. Ajustar un modelo de regresión lineal múltiple que relacione el precio de venta con los nueve regresores. Probar la significancia de la regresión.¿Qué conclusiones se pueden sacar? Usar pruebas t para evaluar la contribución de cada regresor al modelo. Calcular \\(R^2\\) y \\(R^2_{adj}\\) para este modelo. ¿Cuál es la contribución del tamaño del lote y el espacio vital para el modelo, dado que se incluyeron todos los demás regresores?. En este modelo, ¿la colinealidad es un problema potencial? Trazar una gráfica de probabilidad normal de los residuales. ¿Parece haber algún problema con la hipótesis de normalidad? Trazar e interpretar una gráfica de los residuales en función de la respuesta predicha. Trazar las gráficas de los residuales en función de cada una de las variables regresoras. ¿Implican esas gráficas que se especificó en forma correcta el regresor?. Ejercicio 4: Explica lo siguiente. ¿Qué supuestos del modelo de regresión lineal múltiple deben verificarse? ¿Cómo se interpretan los intervalos de confianza? Si construimos un intervalo de confianza del 95% para un coeficiente \\(\\beta_j\\), ¿cuál sería la lectura correcta o interpretación correcta sobre este intervalo? Describe los métodos de selección de variables y sus ventajas y desventajas: Selección hacia adelante (forward) Selección hacia atrás (backward) selección por pasos (stepwise) y/o mejor subconjunto (best subset) Explica cómo se utilizan para elegir el modelo final. Ejercicio 5: Para los datos del ejercicio 1 de la liga de Futbol. Realizar el ejercicio en R y Python. Usar el algoritmo de selección hacia adelante para seleccionar un modelo de regresión. Usar el algoritmo de selección hacia atrás para seleccionar un modelo de regresión. Usar el algoritmo de regresión por pasos para seleccionar un modelo de regresión. Comenta los modelos finales en cada uno de los casos anteriores. ¿Cuál tiene más sentido? ¿Cuál modelo usarían? 2.7 Validación de Supuestos Ejemplo: Se llevó a cabo un conjunto de ensayos experimentales con un horno para determinar una forma de predecir el tiempo de cocción, \\(y\\), a diferentes niveles de ancho del horno, \\(x_1\\), y a diferentes temperaturas, \\(x_2\\). Se registraron los siguientes datos: yp &lt;-c(6.40, 15.05, 18.75, 30.25, 44.85, 48.85, 51.55, 61.50, 100.44, 111.42) x1 &lt;-c(1.32, 2.69, 3.56, 4.41, 5.35, 6.20, 7.12, 8.87, 9.80, 10.65) x2 &lt;-c(1.15, 3.40, 4.10, 8.75, 14.82, 15.15, 15.32, 18.18, 35.19, 40.40) datos&lt;-data.frame(yp, x1, x2) kable(datos, caption = &quot;Factores que influyen en el tiempo de coccion segun diferentes niveles de ancho del horno y diferentes temperaturas&quot;) Table 2.1: Factores que influyen en el tiempo de coccion segun diferentes niveles de ancho del horno y diferentes temperaturas yp x1 x2 6.40 1.32 1.15 15.05 2.69 3.40 18.75 3.56 4.10 30.25 4.41 8.75 44.85 5.35 14.82 48.85 6.20 15.15 51.55 7.12 15.32 61.50 8.87 18.18 100.44 9.80 35.19 111.42 10.65 40.40 Variable dependiente \\(y =\\) tiempo de cocción Variable independiente \\(x_1 =\\) ancho del horno Variable independiente \\(x_2 =\\) diferentes temperaturas Vamos a visualizar los datos: Plot g1 &lt;- ggplot(data = datos, mapping = aes(x = x1, y = yp)) + geom_point(color = &quot;forestgreen&quot;, size = 2) + labs(title = &#39;yp ~ x1&#39;, x = &#39;x1&#39;) + geom_smooth(method = &quot;lm&quot;, se = FALSE, color = &quot;black&quot;) + theme_bw() + theme(plot.title = element_text(hjust = 0.5)) g2 &lt;- ggplot(data = datos, mapping = aes(x = x2, y = yp)) + geom_point(color = &quot;orange&quot;, size = 2) + labs(title = &#39;yp ~ x2&#39;, x = &#39;x2&#39;) + geom_smooth(method = &quot;lm&quot;, se = FALSE, color = &quot;black&quot;) + theme_bw() + theme(plot.title = element_text(hjust = 0.5)) g1+g2 ## `geom_smooth()` using formula = &#39;y ~ x&#39; ## `geom_smooth()` using formula = &#39;y ~ x&#39; Ahora, vamos a analizar algunos de los supuestos. 2.7.1 Multicolinealidad Multicolinealidad variables &lt;- data.frame(x1,x2) m_cor &lt;- cor(variables,method = &quot;pearson&quot;) m_cor ## x1 x2 ## x1 1.0000000 0.9375592 ## x2 0.9375592 1.0000000 Plot library(corrplot) ## corrplot 0.95 loaded corrplot(m_cor) Hay una fuerte correlación entre las variables, lo cual es un problema dado que las variables deberían ser independientes. Vamos a construir dos modelos. Modelos modelo1 &lt;- lm(formula = yp ~ x1 + x2, data = datos) summary(modelo1) ## ## Call: ## lm(formula = yp ~ x1 + x2, data = datos) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.8475 -0.3438 0.0043 0.2554 1.1578 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.57723 0.59865 0.964 0.367 ## x1 2.70957 0.19935 13.592 2.75e-06 *** ## x2 2.05033 0.04743 43.227 9.26e-10 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.6481 on 7 degrees of freedom ## Multiple R-squared: 0.9997, Adjusted R-squared: 0.9997 ## F-statistic: 1.304e+04 on 2 and 7 DF, p-value: 3.166e-13 El intercepto parece no ser significativo. Vamos a construir un segundo modelo usando solo \\(x_2\\) que parece ser más significativa. Modelo 2 modelo2 &lt;- lm(formula = yp ~ x2, data = datos) summary(modelo2) ## ## Call: ## lm(formula = yp ~ x2, data = datos) ## ## Residuals: ## Min 1Q Median 3Q Max ## -4.0226 -1.7338 -0.3497 1.0695 5.8668 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 7.36967 1.61355 4.567 0.00183 ** ## x2 2.65476 0.08077 32.869 8.01e-10 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 3.173 on 8 degrees of freedom ## Multiple R-squared: 0.9926, Adjusted R-squared: 0.9917 ## F-statistic: 1080 on 1 and 8 DF, p-value: 8.005e-10 El ANOVA nos puede ayudar a ver cual modelo es más significativo. Se usan las hipótesis siguientes: \\(H_0:\\) Las variables que eliminamos no tienen significancia. \\(H_1:\\) Las variables son significativas. Si el nuevo modelo es una mejora del modelo original, entonces no podemos rechazar \\(H_0\\). Si ese no es el caso, significa que esas variables fueron significativas; por lo tanto rechazamos \\(H_0\\). ANOVA anova(modelo1, modelo2) ## Analysis of Variance Table ## ## Model 1: yp ~ x1 + x2 ## Model 2: yp ~ x2 ## Res.Df RSS Df Sum of Sq F Pr(&gt;F) ## 1 7 2.940 ## 2 8 80.532 -1 -77.592 184.74 2.745e-06 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Como el p-valor es muy pequeño, menor al valor de significancia 0.05, entonces rechazamos la hipótesis nula, lo que nos dice que el segundo modelo no es una mejora del primero. Como desde el inicio vimos que el coeficiente correspondiente a \\(\\beta_0\\) no era significativo, vamos a eliminarlo. Modelo 3 modelo3 &lt;- lm(formula = yp ~ x1 + x2 -1, data = datos) summary(modelo3) ## ## Call: ## lm(formula = yp ~ x1 + x2 - 1, data = datos) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.8103 -0.3698 0.1963 0.3955 1.1807 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## x1 2.87003 0.10927 26.27 4.74e-09 *** ## x2 2.02140 0.03657 55.28 1.27e-11 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.6452 on 8 degrees of freedom ## Multiple R-squared: 0.9999, Adjusted R-squared: 0.9999 ## F-statistic: 4.188e+04 on 2 and 8 DF, p-value: &lt; 2.2e-16 2.7.2 Normalidad en los residuales Recordemos que los residuos se calculan como la diferencia entre el valor observado \\((y)\\) y el valor predicho \\((\\hat{y})\\) para cada punto de datos, es decir: \\(e = y - \\hat{y}\\) Vamos a hacer un plot de los residuales. QQ-plot residuales = modelo3$residuals ## Q-Q plot qqnorm(residuales) qqline(residuales) Otra forma de obtener este plot es la siguiente. Plots supuestos plot(modelo3) El test de Shapiro-Wilks plantea la hipótesis nula que una muestra proviene de una distribución normal. Eligimos un nivel de significanza, por ejemplo \\(0.05\\), y tenemos una hipótesis alternativa que sostiene que la distribución no es normal. Tenemos entonces lo siguiente: \\(H_0:\\) La distribución es normal. \\(H_1:\\) La distribución no es normal. Test Shapiro-Wilks shapiro.test(residuales) ## ## Shapiro-Wilk normality test ## ## data: residuales ## W = 0.95058, p-value = 0.6754 Como el p-valor es más grande que el valor de significancia, no podemos rechazar la hipótesis nula, por lo tanto los residuales siguen una distribución normal. 2.7.3 Homocedasticidad Homocedasticidad = varianza constante Correcto: Si los residuales están dispersos uniformemente a lo largo de todos los valores predichos. Problema: Si vemos un patrón de embudo (residuales pequeños para predichos bajos y grandes para predichos altos, o viceversa). Esto indica heterocedasticidad. Linealidad y errores independientes: Si se notan curvas, arcos o patrones sistemáticos, podría indicar que: La relación no es estrictamente lineal. Falta alguna variable importante en el modelo. O hay correlación entre errores. Una forma de verlo es con el plot de residuales vs valores predichos. Plots par(mfrow = c(2, 2)) plot(modelo3) En R, existe la función bptest(), que es el test de Breusch-Pagan para la heterocedasticidad. Esta función toma como entrada un modelo de regresión y devuelve el resultado de la prueba de hipótesis para la homocedasticidad de los residuos. \\(H_0:\\) los residuos tienen varianza constante (homocedasticidad) \\(H_1\\): hay heterocedasticidad en los residuos El resultado incluye el valor del estadístico de prueba (el valor de la prueba de Breusch-Pagan), el p-valor y el número de grados de libertad. Si el p-valor es menor que el nivel de significancia elegido, se rechaza la hipótesis nula de homocedasticidad y se concluye que hay heterocedasticidad en los residuos. Breusch-Pagan library(lmtest) ## Cargando paquete requerido: zoo ## ## Adjuntando el paquete: &#39;zoo&#39; ## The following objects are masked from &#39;package:base&#39;: ## ## as.Date, as.Date.numeric bptest(modelo3) ## ## studentized Breusch-Pagan test ## ## data: modelo3 ## BP = 5.7517, df = 1, p-value = 0.01647 Entonces como el p-valor es menor al valor de significancia \\(0.05\\), rechazamos la hipótesis nula y podemos decir que existe heterocedasticidad en los residuales. La heterocedasticidad es un problema porque la regresión de mínimos cuadrados ordinarios asume que todos los residuales se extraen de una población que tiene una varianza constante (homocedasticidad). Una forma de corregirlo es haciendo una transformación de los datos. Vamos a transformar la variable \\(x_1\\). Nota: Estas transformaciones deben de justificarse y explicar el porque. Modelo 4 modelo4 &lt;- lm(formula = yp ~ log(x1) + x2 -1, data = datos) summary(modelo4) ## ## Call: ## lm(formula = yp ~ log(x1) + x2 - 1, data = datos) ## ## Residuals: ## Min 1Q Median 3Q Max ## -2.4546 -0.7961 -0.3458 0.9207 2.5270 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## log(x1) 7.52724 0.72213 10.42 6.22e-06 *** ## x2 2.34013 0.06306 37.11 3.05e-10 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.578 on 8 degrees of freedom ## Multiple R-squared: 0.9994, Adjusted R-squared: 0.9993 ## F-statistic: 6997 on 2 and 8 DF, p-value: 1.065e-13 Si realizamos la prueba de la homocedasticidad. Test bptest(modelo4) ## ## studentized Breusch-Pagan test ## ## data: modelo4 ## BP = 0.13878, df = 1, p-value = 0.7095 Vemos que ahora el p-valor es más grande que el valor de significancia, lo cual nos indica que no podemos rechazar \\(H_0\\), es decir ahora si podemos asumir que hay homocedasticidad. En el modelo final, tendríamos \\(\\beta_0=0\\), \\(\\beta_1*=\\) 7.5272361 y \\(\\beta_2=\\) 2.3401283. Plots finales par(mfrow = c(2, 2)) plot(modelo4) Otras dos pruebas que se pueden usar son fligner.test y leveneTest. 2.7.4 No autocorrelación Una forma de revisar este supuesto es con el test de Durbin-Watson. Las hipótesis que se tienen son: \\(H_0:\\) No hay autocorrelación en los errores (los residuales son independientes). \\(H_1:\\) Hay autocorrelación en los errores (generalmente, autocorrelación positiva de primer orden). El estadístico DW toma valores entre 0 y 4: \\(DW\\) aproximadamente 2, entonces no hay autocorrelación (se cumple el supuesto). \\(DW &lt; 2\\), entonces indica autocorrelación positiva (los errores tienden a repetirse). \\(DW &gt; 2\\), entonces indica autocorrelación negativa (los errores tienden a alternar signo). Test D-W dwtest(modelo4) ## ## Durbin-Watson test ## ## data: modelo4 ## DW = 1.036, p-value = 0.02046 ## alternative hypothesis: true autocorrelation is greater than 0 2.7.5 Predicciónes Vamos a predecir por último un valor. Para \\(2.10\\) de ancho del horno y una temperatura de \\(3.10\\) , ¿cuánto seria el tiempo de cocción? Predicciónes nuevo.dato &lt;- data.frame(x1 = 2.10, x2 = 3.10) prediccion &lt;- predict(modelo4, newdata = nuevo.dato) paste(&quot;La cantidad estimada de tiempo de coccion es:&quot;, round(prediccion, 2)) ## [1] &quot;La cantidad estimada de tiempo de coccion es: 12.84&quot; 2.7.6 Ejercicios Ejercicio 1: Para los datos de Datarium marketing, analiza los supuestos. Explica tus resultados y sube tus respuestas a github. 2.8 Análisis de Varianza Ejemplo 1: Supongamos que un cierto tipo de motor de cohete se fabrica uniendo un propulsor tipo A y un propulsor tipo B. La fuerza del enlace entre los dos propulsores es una característica de importancia y se sospecha que está relacionada con la edad (en semanas) del lote del propulsor tipo B. Se tiene una muestra de tamaño 20 de la fuerza del enlace y la edad del lote del propulsor tipo B que fue utilizado. Datos datos &lt;- data.frame( Fuerza_enlace = c( 2158.70, 1678.15, 2316.00, 2061.30, 2207.50, 1708.30, 1784.70, 2575.00, 2357.90, 2256.70, 2165.20, 2399.55, 1779.80, 2336.75, 1765.30, 2053.50, 2414.40, 2200.50, 2654.20, 1753.70 ), Edad_lote = c( 15.50, 23.75, 8.00, 17.00, 5.50, 19.00, 24.00, 2.50, 7.50, 11.00, 13.00, 3.75, 25.00, 9.75, 22.00, 18.00, 6.00, 12.50, 2.00, 21.50 ) ) datos ## Fuerza_enlace Edad_lote ## 1 2158.70 15.50 ## 2 1678.15 23.75 ## 3 2316.00 8.00 ## 4 2061.30 17.00 ## 5 2207.50 5.50 ## 6 1708.30 19.00 ## 7 1784.70 24.00 ## 8 2575.00 2.50 ## 9 2357.90 7.50 ## 10 2256.70 11.00 ## 11 2165.20 13.00 ## 12 2399.55 3.75 ## 13 1779.80 25.00 ## 14 2336.75 9.75 ## 15 1765.30 22.00 ## 16 2053.50 18.00 ## 17 2414.40 6.00 ## 18 2200.50 12.50 ## 19 2654.20 2.00 ## 20 1753.70 21.50 Un modelo completo sería \\(y_i = \\beta_0 + \\beta_1x_i + \\epsilon_i\\), el cual se ve como: Plot R modelo_completo &lt;- lm(Fuerza_enlace ~ Edad_lote, data = datos) plot(datos$Edad_lote, datos$Fuerza_enlace, main = &quot;Modelo completo&quot;, xlab = &quot;Edad del lote (semanas)&quot;, ylab = &quot;Fuerza del enlace (psi)&quot;, pch = 19, col = &quot;blue&quot;) # Agregar la recta de regresión abline(modelo_completo, col = &quot;red&quot;, lwd = 2) ## `geom_smooth()` using formula = &#39;y ~ x&#39; Queremos ver si un modelo reducido explica mejor o no a los datos. En este caso el modelo con menos parámetros o modelo reducido es el modelo que describirá la hipótesis nula \\(H_0\\). En regresión lineal simple, es común plantear \\(H_0:\\beta_1=0\\), de manera que el modelo reducido es \\(y_i=\\beta_0+\\epsilon_i\\), es decir, cada valor \\(y_i\\) es función de una constante (la media) y un error, este modelo se vería como: ¿Cuál modelo es mejor? Debemos obtener los estimadores para cada modelo y la suma de cuadrados de los errores. La suma de los cuadrados de los errores \\(SSE(C) = \\sum(y_i - \\hat{y}_i)^2\\), la cual tiene \\(n-2\\) grados de libertad para el modelo completo. La suma de los cuadrados de los errores del modelo reducido \\(SSE(R) = \\sum(y_i - \\bar{y}_i)^2\\), la cual tiene \\(n-1\\) grados de libertad para el modelo reducido. Hay que tener en cuenta que \\(SSE(R)\\) siempre es mayor a \\(SSE(C)\\), por lo tanto si la diferencia es miu pequeña, entonces tiene sentido utilizar el modelo reducido, pero si la diferencia es muy grande, entonces el parámetro adicional agrega información importante al modelo. Se usa la prueba \\(F\\) general: \\[F_0 = \\frac{\\left( \\frac{SSE(R) - SSE(C)}{ (n-1) - (n-2)} \\right)}{\\frac{SSE(C)}{n-2}} = \\frac{SCE(C)}{\\frac{SSE(C)}{n-2}} \\] La cantidad \\(SSE(R) - SSE(C)\\) representa la suma de cuadrados explicada por la variable \\(x\\), a esta cantidad la vamos a denotar por \\(SCE\\). Entonces, rechazar la hipótesis nula \\(H_0\\) implica rechazar el modelo reducido y no rechazar \\(H_0\\) implica rechazar el modelo completo. anova(modelo_completo) ## Analysis of Variance Table ## ## Response: Fuerza_enlace ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## Edad_lote 1 1527483 1527483 165.38 1.643e-10 *** ## Residuals 18 166255 9236 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Como el p-valor es muy pequeño, se rechaza \\(H_0\\) por lo que se concluye que hay pruebas suficientes sobre la existencia de asociación lineal de la edad de lote y la fuerza del enlace. Todo esto, se puede llevar al caso de regresión lineal múltiple. Ejemplo: Considere los siguientes datos en los que se tienen mediciones del tamaño de infarto, área de la región en riesgo y dos variables que identifican el tipo de tratamiento utilizado en 32 pacientes. Se busca describir el tamaño del infarto a través de las otras 3-variables. Para este caso, vamos a ajustar un modelo de regresión lineal múltiple completo y después vamos a hacer pruebas sobre quitar algunas variables. ## Paciente Infarc Area X2 X3 ## 1 1 0.119 0.34 0 0 ## 2 2 0.190 0.64 0 0 ## 3 3 0.395 0.76 0 0 ## 4 4 0.469 0.83 0 0 ## 5 5 0.130 0.73 0 0 ## 6 6 0.311 0.82 0 0 ## 7 7 0.418 0.95 0 0 ## 8 8 0.480 1.06 0 0 ## 9 9 0.687 1.20 0 0 ## 10 10 0.847 1.47 0 0 ## 11 11 0.062 0.44 1 0 ## 12 12 0.122 0.77 1 0 ## 13 13 0.033 0.90 1 0 ## 14 14 0.102 1.07 1 0 ## 15 15 0.206 1.01 1 0 ## 16 16 0.249 1.03 1 0 ## 17 17 0.220 1.16 1 0 ## 18 18 0.299 1.21 1 0 ## 19 19 0.350 1.20 1 0 ## 20 20 0.350 1.22 1 0 ## 21 21 0.588 0.99 1 0 ## 22 22 0.379 0.77 0 0 ## 23 23 0.149 1.05 0 1 ## 24 24 0.316 1.06 0 1 ## 25 25 0.390 1.02 0 1 ## 26 26 0.429 0.99 0 1 ## 27 27 0.477 0.97 0 1 ## 28 28 0.439 1.12 0 1 ## 29 29 0.446 1.23 0 1 ## 30 30 0.538 1.19 0 1 ## 31 31 0.625 1.22 0 1 ## 32 32 0.974 1.40 0 1 El modelo completo sería \\(y_i = \\beta_0 + \\beta_1x_{1i} +\\beta_2x_{2i} + \\beta_3x_{3i}+\\epsilon_i\\). modelo_c &lt;- lm(Infarc~ Area + X2 + X3, data = datos) summary(modelo_c) ## ## Call: ## lm(formula = Infarc ~ Area + X2 + X3, data = datos) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.28175 -0.06704 -0.01658 0.06294 0.35970 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -0.14927 0.10377 -1.439 0.161376 ## Area 0.63395 0.10927 5.802 3.12e-06 *** ## X2 -0.25005 0.06053 -4.131 0.000295 *** ## X3 -0.08563 0.06641 -1.289 0.207831 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.138 on 28 degrees of freedom ## Multiple R-squared: 0.6456, Adjusted R-squared: 0.6076 ## F-statistic: 17 on 3 and 28 DF, p-value: 1.748e-06 Con este modelo se obtiene la siguiente tabla de ANOVA. anov &lt;- anova(modelo_c) anov ## Analysis of Variance Table ## ## Response: Infarc ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## Area 1 0.62492 0.62492 32.8245 3.801e-06 *** ## X2 1 0.31453 0.31453 16.5210 0.0003533 *** ## X3 1 0.03165 0.03165 1.6624 0.2078307 ## Residuals 28 0.53307 0.01904 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## los p-valores en la última columna se pueden obtener con: pf(32.8245, df1 = 1, df2 = 28, lower.tail = FALSE) 1) Pruebas sobre uno de los parámetros: \\(H_0:\\beta_1=0\\), modelo reducido \\(y_i = \\beta_0 +\\beta_2x_{2i} + \\beta_3x_{3i}+\\epsilon_i\\). Vamos a denotar a la suma de los cuadrados de los errores asociada a este modelo \\(SSE(x_1)\\), la cual tiene \\(n-3\\) grados de libertad asociados (tenemos 3 parámetros a estimar \\(\\beta_0,\\beta_2,\\beta_3\\)). Como el p-valor es muy pequeño, se rechaza a \\(H_0\\) y se concluye que hay suficiente evidencia para decir que el tamaño del infarto está significativamente relacionado con el tamaño del área de riesgo. SCE_X1 &lt;- anov$`Sum Sq`[1] SSE_C &lt;- anov$`Sum Sq`[4] df2 &lt;- anov$Df[4] df1 &lt;- nrow(datos) - 3 - df2 F_g &lt;- (SCE_X1/df1) / (SSE_C/df2) F_g ## [1] 32.82447 2) Pruebas sobre todos los parámetros: En este caso tenemos \\(H_0:\\beta_1=\\beta_2=\\beta_3=0\\) vs \\(H_1: \\beta_j\\neq 0\\) p.a. \\(j\\). Es decir, el modelo reducido sería \\(y_i = \\beta_0+\\epsilon_i\\). La prueba \\(F\\) general es la misma, pero ahora la suma de cuadrados asociada al modelo reducido \\(SSE(x_1,x_2,x_3)\\) tiene \\(n-1\\) grados de libertad ya que solo debemos estimar \\(\\beta_0\\). SCE_X1X2X3 &lt;- sum(anov$`Sum Sq`[1:3]) df1 &lt;- nrow(datos) -1 - df2 F_all &lt;- (SCE_X1X2X3 / df1) / (SSE_C / df2) F_all ## [1] 17.00263 El cual tiene un \\(p-\\)valor asociado a una distribución \\(F\\) con 3 y 28 grados de libertad. pf(F_all, df1 = 3, df2 = 28, lower.tail = FALSE) ## [1] 1.747583e-06 Por lo tanto rechazamos la hipótesis nula. Notemos que este valor coincide con el que nos da el summary del modelo. summary(modelo_c) ## ## Call: ## lm(formula = Infarc ~ Area + X2 + X3, data = datos) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.28175 -0.06704 -0.01658 0.06294 0.35970 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -0.14927 0.10377 -1.439 0.161376 ## Area 0.63395 0.10927 5.802 3.12e-06 *** ## X2 -0.25005 0.06053 -4.131 0.000295 *** ## X3 -0.08563 0.06641 -1.289 0.207831 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.138 on 28 degrees of freedom ## Multiple R-squared: 0.6456, Adjusted R-squared: 0.6076 ## F-statistic: 17 on 3 and 28 DF, p-value: 1.748e-06 3) Pruebas sobre un subconjunto de los parámetros: Supongamos ahora que \\(H_0:\\beta_2=\\beta_3=0\\). Es decir, el modelo reducido sería \\(y_i = \\beta_0+ \\beta_1x_{1i}+\\epsilon_i\\). La prueba es similar pero solo usamos \\(x_2\\) y \\(x_3\\). SCE_X2X3 &lt;- sum(anov$`Sum Sq`[2:3]) df1 &lt;- nrow(datos) - 2 - df2 F_dos &lt;- (SCE_X2X3 / df1) / (SSE_C / df2) F_dos ## [1] 9.091716 El \\(p-\\)valor asociado a la prueba \\(F\\) con 2 y 28 grados de libertad es: pf(F_dos, df1 = 2, df2 = 28, lower.tail = FALSE) ## [1] 0.0009065789 Por lo que se rechaza de nuevo la hipótesis nula. 2.9 Selección del modelo "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
